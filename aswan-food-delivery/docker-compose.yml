version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aswan-food-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: aswan_food_db
      POSTGRES_USER: aswan_user
      POSTGRES_PASSWORD: aswan_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - aswan-food-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: aswan-food-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aswan-food-network

  # Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: aswan-food-server
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://aswan_user:aswan_password@postgres:5432/aswan_food_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRE: 7d
      CLIENT_URL: http://localhost:3000
      SERVER_URL: http://localhost:5000
      PORT: 5000
    depends_on:
      - postgres
      - redis
    volumes:
      - ./server/uploads:/app/uploads
    networks:
      - aswan-food-network

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: http://localhost:5000/api
        REACT_APP_SOCKET_URL: http://localhost:5000
    container_name: aswan-food-client
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - server
    networks:
      - aswan-food-network

volumes:
  postgres_data:
  redis_data:

networks:
  aswan-food-network:
    driver: bridge